[{"content":"What is gamemode? The command gamemoderun %command% is used on Linux to run a game or application with GameMode, a tool designed to optimize your system for gaming. It tweaks settings like the CPU governor, I/O priority, and more to give your games a performance boost.\nHow It Works: gamemoderun: This is the command that activates GameMode.\n%command%: This is a placeholder for the actual command used to launch your game or app. It’s commonly used in Steam’s launch options.\nExample:\nIf you’re running a game through Steam, you might add the following to the game’s launch options:\ngamemoderun %command%\nThis ensures the game runs with GameMode optimizations.\nInstallation: If you don’t have GameMode installed, you can install it on Arch Linux using:\n1 sudo pacman -S gamemode To check if GameMode is active, run:\n1 gamemoded -s This will show whether GameMode is running.\nWhat Does GameMode Optimize? GameMode can tweak a variety of settings to improve gaming performance, including:\nCPU Governor:\nLocks your CPU at top speed for better performance. I/O Priority:\nGives your game priority access to your disk, reducing stuttering. Process Niceness:\nMakes sure your game gets more attention from the CPU. Kernel Scheduler:\nAdjusts how tasks are handled to keep your game running smoothly. Screensaver Inhibiting:\nStops your screensaver from interrupting your game. GPU Performance Mode:\nOptimizes your GPU for gaming (supports NVIDIA and AMD, plus overclocking for NVIDIA). CPU Core Management:\nPins or parks CPU cores to improve performance. Custom Scripts:\nLets you add your own tweaks for even more control. Availability Gamemode packages are available for Ubuntu, Debian, Solus, Arch, Gentoo, Fedora, OpenSUSE, Mageia and possibly more.\nIs It Worth It? While not all games will see a huge improvement, GameMode is a simple and effective way to squeeze out extra performance. If you’re a Linux gamer, it’s definitely worth a try!\nFor more details, check out the Github repository\n","date":"2025-02-03T00:00:00Z","image":"https://saipheblue.github.io/p/gamemode/1_hu_c5e25c5f6636df90.png","permalink":"https://saipheblue.github.io/p/gamemode/","title":"Gamemode"},{"content":"Emoji Combiner When I want to create custom emoji faces, I’ll know where to go.\nLink\nInfinite Craft Speaking of combining two things into one, Infinite Craft has stolen a few hours of my life, and I don’t regret it. It’s a fun experience—try creating something like a sharknado and see how long it takes you.\nSharknado is pretty simple, wink wink.\nLink\n","date":"2025-01-26T00:00:00Z","image":"https://saipheblue.github.io/p/emoji-combiner-meets-infinite-fun/5_hu_4741e5d3417b7992.png","permalink":"https://saipheblue.github.io/p/emoji-combiner-meets-infinite-fun/","title":"Emoji Combiner Meets Infinite Fun"},{"content":"From time to time, you might need to free up disk space, but where do you start? How can you quickly locate those large files taking up valuable storage? Let’s explore some options. Spoiler alert: The first two are my top picks!\nTerminal Command to Locate Large Files\n1 find / -type f -size +2000M 2\u0026gt;/dev/null /: Search from the root directory (change to specific directories like /home or /var for faster results).\n-type f: Search for files only.\n-size +2000M: Files larger than 2000 MB.\n2\u0026gt;/dev/null: Suppress permission denied errors.\nNcdu Install ncdu:\n1 sudo pacman -S ncdu Run ncdu:\n1 ncdu / Use arrow keys to navigate\nGUI tool If you prefer graphical tools, you can use baobab:\n1 sudo pacman -S baobab Package cache Check cache size:\n1 du -sh /var/cache/pacman/pkg Clean package cache:\n1 sudo pacman -Sc To remove all cached packages:\n1 sudo pacman -Scc Log files Check log sizes:\n1 sudo du -sh /var/log/* Clear logs ( use with caution !!! ):\n1 sudo truncate -s 0 /var/log/filename.log ","date":"2025-01-21T00:00:00Z","image":"https://saipheblue.github.io/p/quick-tools-to-manage-space-usage/1_hu_92b7981145091369.png","permalink":"https://saipheblue.github.io/p/quick-tools-to-manage-space-usage/","title":"Quick Tools to Manage Space Usage"},{"content":" Disclaimer: This post was created with the help of an LLM ( also incorrectly referred to as AI ), mostly for grammar correction. Most of the generated \u0026ldquo;translation\u0026rdquo; is based on my own text, wiki entries, or official game descriptions.\nThere’s something both haunting and captivating about wandering through abandoned video game worlds. The concrete jungles, where rusted steel beams entwine crumbling concrete panels like skeletal vines, feel like places you’ve visited in fleeting dreams or glimpsed at the edges of your memory, though you know you never truly have. They exert a peculiar pull, a delicate tension between familiarity and unease.\nI think I’ve finally pinpointed why these spaces fascinate me so deeply. It’s the uncanny valley—not in the usual sense of lifelike robots or hyperrealistic characters, but in how these places mimic the real world while feeling subtly\u0026hellip; wrong. This ties closely to the concept of liminal spaces—those eerie transitional zones frozen in time, evoking an almost otherworldly stillness.\nThese digital landscapes strip away the hum of human presence, leaving behind only echoes. There are no bustling NPCs, no throngs of activity—just you and the hollow, forgotten architecture. Surprisingly, there’s an entire niche in gaming dedicated to this sensation: experiences that aren’t games in the traditional sense, but walking simulators that immerse you in these deserted realms.\nWhat stays with me most are the games that embrace quiet. Horror sometimes leans too heavily on jump scares or dread, but the quieter ones—the ones that simply let you exist—linger in my mind far longer.\nBabbdi Take Babbdi, for example. This short exploration game completely captured my imagination. Its description is simple:\n\u0026ldquo;BABBDI is a short, first-person exploration experience with light narrative and platforming elements. Visit the town of BABBDI, a forsaken district in the outer ring of the megalopolis. Meet its inhabitants and discover how to escape.\u0026rdquo;\nBut this doesn’t tell you what it feels like to play. Wandering through the desolate streets of BABBDI, surrounded by muted gray tones, I found myself immersed in its quiet melancholy. The air felt heavy with stories untold, whispers of lives once lived but now absent. There’s no rush to leave, no immediate threat to overcome—just the haunting beauty of a forgotten place.\nIt’s a game that lingers in your mind long after you’ve played it, much like a dream you can’t quite shake. I’ve promised myself I’ll return to BABBDI one day when I’m in the right mood, just to stroll through its streets again and let its atmosphere wash over me.\nOther \u0026ldquo;Dying Worlds\u0026rdquo; BABBDI is far from the only game that offers this kind of experience. Over time, I’ve stumbled upon others, each with its own take on liminal beauty. Some I’ve played, and some are still waiting for the right moment to pull me in. Here’s a list of games I’m keeping in mind for my next exploration:\nNaissanceE An obscure, magical first-person exploration game that feels like stepping into a giant, mysterious structure. It’s less about solving puzzles and more about letting yourself sink into its timeless, otherworldly atmosphere.\nConcrete Paths A meditative exploration through raw, brutalist architecture. This one feels like walking through forgotten spaces where the world fades to concrete and shadows.\nConcrete Tremor A short, unsettling experience that captures the liminal tension of industrial environments. It’s minimalist but hits hard with its oppressive, empty mood.\nFugue in Void A game that feels more like a visual poem. It takes you through vast, hauntingly empty structures, forcing you to sit with the silence and soak in the mood.\n2:22AM A quiet, contemplative experience about wandering through a neon-lit urban landscape at night. It captures the strange mix of comfort and unease that comes with being awake when the rest of the world is asleep.\nKletka It might not perfectly match the “abandoned” theme, but its atmosphere and mood fit right into the same emotional space. Sometimes, it’s not about the specifics of the environment but the feeling it leaves behind—the echoes, the weight of something unspoken.\nMachinarium Created by Amanita Design,this game isn’t about derelict spaces, yet it captures the same sense of isolation and melancholy. Set in a decaying mechanical world, it immerses you in empty, quiet environments where you feel more like a visitor than a participant. The beauty lies in its silence—the world doesn’t need to be abandoned to feel forgotten. With its delicate atmosphere and Tomas Dvorak’s haunting soundtrack, Machinarium evokes the feeling of wandering through spaces that time has left behind, allowing the stillness to speak for itself.\nSweden - C148 As I get lost in these desolate worlds, there’s one track that always seems to match the feeling perfectly: “Sweden” by C418. Originally from Minecraft.\nIt’s strange and magical how music can emotionally transport you to the same places of abandoned nostalgia.\nManga: Blame! by Tsutomu Nihei Blame! is not a game, but it fits the vibe perfectly. A sprawling, nightmarish city that stretches endlessly, where silence and danger coexist. Nihei’s artwork is all sharp angles and impossible spaces—like a blueprint for the worlds these games explore.\nConclusion These experiences remind me that games don’t always need grand narratives or complex mechanics to make an impact. Sometimes, the simplest thing—a quiet walk through an empty, crumbling world—is all it takes to feel profoundly connected to something beyond words.\nSo next time that strange, reflective mood strikes, I’ll know where to go. If anyone is reading this, you might find yourself in one of these worlds, too.\n","date":"2025-01-13T00:00:00Z","image":"https://saipheblue.github.io/p/liminal-space/title_hu_6b0fad7943d7e57b.jpg","permalink":"https://saipheblue.github.io/p/liminal-space/","title":"Liminal Space"},{"content":"I came across a great website where, by entering a service like Facebook or Google, it provides a brief and clear overview of the Terms of Service (ToS) in bullet points for that specific page and rates it based on how user-friendly it is for the end user.\nhttps://tosdr.org/en/\n","date":"2025-01-09T00:00:00Z","image":"https://saipheblue.github.io/p/tosdr/1_hu_df343140a92f02d7.png","permalink":"https://saipheblue.github.io/p/tosdr/","title":"ToS;DR"},{"content":"I was looking for a Linux alternative to the Win + G shortcut in Windows, which opens the Xbox Game Bar. I used this feature for quickly and conveniently managing audio, but there was nothing similar on Linux. So, I created this script to fill the gap.\nThis script was primarily created for the bspwm tiling window manager but might work with some tweaks on other window managers.\nSteps to Use: Keybind Edit your keyboard shortcuts in the sxhkdrc file, located at .config/bspwm/.\nExample:\n1 2 3 # Audio management durign gameplay super + g ~/.config/bspwm/src/Audio_manager Script Place the script below in your bspwm script folder (e.g., .config/bspwm/src/ ) and name it Audio_manager\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 #!/usr/bin/env bash # Get a list of active audio streams and their application names, excluding anything starting with \u0026#34;sink-input\u0026#34; streams=$(pactl list sink-inputs | awk \u0026#39; /Sink Input #[0-9]+/ {stream_id = $3} /application.name/ { app_name = substr($0, index($0,$3)) gsub(/\u0026#34;/, \u0026#34;\u0026#34;, app_name) if (app_name !~ /^sink-input/) { stream_list[app_name] = stream_id } } END { for (app_name in stream_list) { print stream_list[app_name], app_name } } \u0026#39;) # If no streams are found, show a message if [[ -z \u0026#34;$streams\u0026#34; ]]; then notify-send \u0026#34;No audio streams found\u0026#34; exit 1 fi # Show the list of audio streams in rofi selected=$(echo \u0026#34;$streams\u0026#34; | rofi -dmenu -i -p \u0026#34;Select Application to Adjust Volume\u0026#34; -no-background -float) # Debugging: Print the selected stream echo \u0026#34;Selected: $selected\u0026#34; # Extract stream ID and app name from the selected entry # Remove the leading \u0026#39;#\u0026#39; from the stream ID stream_id=$(echo \u0026#34;$selected\u0026#34; | awk \u0026#39;{print $1}\u0026#39; | sed \u0026#39;s/#//\u0026#39;) app_name=$(echo \u0026#34;$selected\u0026#34; | awk \u0026#39;{print $2}\u0026#39;) # Check if an application was selected if [[ -z \u0026#34;$stream_id\u0026#34; ]]; then notify-send \u0026#34;No application selected\u0026#34; exit 1 fi # Get current volume level of the selected application current_volume=$(pactl list sink-inputs | grep -A 10 \u0026#34;Sink Input #$stream_id\u0026#34; | grep \u0026#39;Volume\u0026#39; | awk \u0026#39;{print $5}\u0026#39; | sed \u0026#39;s/%//\u0026#39;) # Show volume selection in rofi new_volume=$(echo -e \u0026#34;100\\n90\\n80\\n70\\n60\\n50\\n40\\n30\\n20\\n10\\n0\u0026#34; | rofi -dmenu -i -p \u0026#34;Adjust volume for $app_name (current: $current_volume%)\u0026#34; -no-background -float) # If no new volume is selected, exit if [[ -z \u0026#34;$new_volume\u0026#34; ]]; then notify-send \u0026#34;No volume selected\u0026#34; exit 1 fi # Adjust the volume using pactl pactl set-sink-input-volume \u0026#34;$stream_id\u0026#34; \u0026#34;$new_volume%\u0026#34; # Notify the user of the volume change notify-send \u0026#34;Set volume for $app_name to $new_volume%\u0026#34; ","date":"2025-01-06T00:00:00Z","image":"https://saipheblue.github.io/p/quick-audio-management/1_hu_aff5614890103817.png","permalink":"https://saipheblue.github.io/p/quick-audio-management/","title":"Quick Audio Management"},{"content":"What better way to step into the new year than by playing an intriguing indie title created by Mosu Äijälä\nGet it HERE from itch.io Developer\u0026rsquo;s description:\n\u0026quot; You are the Dark Queen—the most powerful being of your entire universe. Your lair is breached by an aspiring hero—a pitiful thing, easily crushed.\nExcept they keep coming back.\nA 20 minute anti-game about an unconventional relationship and the capacity for change.\u0026quot;\n","date":"2025-01-01T00:00:00Z","image":"https://saipheblue.github.io/p/the-dark-queen-of-mortholme/1_hu_35598c8d07c076db.png","permalink":"https://saipheblue.github.io/p/the-dark-queen-of-mortholme/","title":"The Dark Queen of Mortholme"},{"content":"There are plenty of guides online on how to set everything up on Windows, but not so many for Arch Linux or Linux in general.\nSteamVR SteamVR is the backbone of PC VR gaming, supporting a wide range of headsets and offering access to countless VR titles. It is part of your Steam library—just download and run it.\nIf you\u0026rsquo;ve previously used your headset on Windows, you might encounter an issue with Steam Link on Linux. It displays the error:\n'Streaming VR is not available from that computer.'\nDue to this limitation, we need to use alternative software to pair with SteamVR.\nSideQuest SideQuest is a popular platform for sideloading apps, games, and experimental software onto standalone VR headsets. It expands the possibilities of your VR device beyond the default app store.\nVisit the official SideQuest site for a detailed guide on how to connect your headset, enable developer mode, and install all prerequisites.\nIf you\u0026rsquo;re having trouble connecting your headset, ensure you have ADB (Android Debug Bridge) installed. To check, run:\n1 adb version If it’s not installed, you can get it with:\n1 sudo pacman -S android-tools ALVR (Air Light VR) ALVR allows wireless PC VR gaming by streaming games from your PC to a standalone headset like the Meta Quest series. It uses low-latency video encoding to provide a seamless experience.\nDownload ALVR from the official ALVR GitHub releases page\nInstall the APK on your headset using SideQuest. Extract the .tar file on your Arch Linux machine and run the executable. Follow the on-screen instructions to set up ALVR. Be sure to mark the headset as \u0026ldquo;trusted.\u0026rdquo;\nOnce done, start SteamVR.\nFrom there, manually start VR games from your PC. While this is a limitation, once the game is running, you can enjoy your session in the VR headset.\nTips \u0026amp; tricks Fix for Black Screen on Headset If your VR game runs on your PC but your headset displays a black screen, try this fix: Add the following command to SteamVR\u0026rsquo;s launch options:\n~/.local/share/Steam/steamapps/common/SteamVR/bin/vrmonitor.sh %command%\n(Note: File paths may vary depending on where you installed SteamVR.)\nFix for Games Not Launching in VR Mode Is the game not launching in VR mode? Go to the game properties, then to Compatibility, and enable Proton. After that, in General settings or during the first game launch, it will ask if you want to play in normal mode or VR mode.\nHappy gaming ! :) ","date":"2024-12-30T00:00:00Z","image":"https://saipheblue.github.io/p/quest-3-on-arch/3_hu_974740a45ad8ac36.jpg","permalink":"https://saipheblue.github.io/p/quest-3-on-arch/","title":"Quest 3 on Arch"},{"content":"\nWhat will you need Geiger–Müller kit for example this one Raspberry pi - any model is fine but guide is written for raspberry pi 5. For older models you will need to make some adjustments Hardware Connect 5V to any 5V, Ground to any ground and VIN to GPIO4 (pin 7)\nRpi5 GPIO diagram μSv/h Ratio Check the tube that is installed in your kit. In my case, I have J305. We need to calculate μSv/h ratio based on the tube\u0026rsquo;s sensitivity. For J305, almost everyone is using the wrong coefficient/ratio of 0.00812037037037. Here is the formula I used, together with a source elaborating why 0.0081 is wrong: J305 has 25 CPM\n1 / (25 * 60 / 8.77) = 0.00584666666667\nSource\nSoftware I am using Raspbian OS. If you have a different OS, commands may differ.\nRequired files Navigate to this repository and clone it.\nIn documentation folder, you can find more detailed information about how everything works and values used in calculations\nIssues \u0026amp; pre-req Install flask 1 pip install flask If you got permisisons error, use sudo\nIf you get a 404 error, make sure index page is in the \u0026ldquo;templates\u0026rdquo; folder. It is case sensitive. The structure should be as follows:\nProject geiger.py templates index.html M4011 tube The manufacturer’s documentation lists the M4011, which has the same specs as the J305.\nSSL ssl_context=('cert.pem', 'key.pem') can be replaced by ssl_context='adhoc' if you dont have the keys\nSource\nGPIO problem RPi 5 has issues with GPIO. Remove the current GPIO library using:\n1 sudo apt remove python3-rpi.gpio Then install lgpio:\n1 python3 -m pip install rpi-lgpio flask If you have installation problems, use this (but it could break system packages, or you can use a virtual environment):\n1 python3 -m pip install rpi-lgpio flask --break-system-packages more info\nRun the script Simply run geiger.py to start measuring:\n1 python3 geiger.py Then navigate to 127.0.0.1:80/index to see the chart\n","date":"2024-12-26T00:00:00Z","image":"https://saipheblue.github.io/p/diy-geiger-counter/5_hu_f8813200efe8cd19.jpg","permalink":"https://saipheblue.github.io/p/diy-geiger-counter/","title":"DIY Geiger counter"},{"content":"Did you know you can display all IP addresses and interfaces on Linux in a neatly formatted table for easier reading?\nThe syntax is:\n1 2 ip -br -c addr show ip -br -c link show Source\n","date":"2024-12-19T00:00:00Z","image":"https://saipheblue.github.io/p/colorize-and-list-ips/1_hu_d78ec7c741c69f9f.png","permalink":"https://saipheblue.github.io/p/colorize-and-list-ips/","title":"Colorize and List IPs"},{"content":"What else is there to say? You can easily browse YouTube videos right from the terminal\nSource Get it from this repo made by Benexl\nInstallation 1 2 3 4 5 # for paru users paru -S yt-x-git # for yay users yay -S yt-x-git Basic commands 1 2 3 4 5 # launch the ui yt-x # edit your config yt-x -e ","date":"2024-12-18T00:00:00Z","image":"https://saipheblue.github.io/p/yt-x/2024-12-19_01-32_hu_b321942f6b36b50d.png","permalink":"https://saipheblue.github.io/p/yt-x/","title":"YT-X"}]